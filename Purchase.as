package{	import flash.display.MovieClip;	import flash.text.TextField;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.events.KeyboardEvent;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.ui.Keyboard;	import fl.transitions.Tween;	import fl.transitions.TransitionManager;	import fl.transitions.TweenEvent;	import fl.transitions.easing.*;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	public class Purchase extends MovieClip 	{				private var myMovingBoy:MovingBoy;		private var myMovingBoy_left:MovingBoyLeft;		private var raju_leftFrame:ImageToMovie;		private var rajuTween:Tween;		private var shopkeeperTween:Tween;		private var shopkeeperTween2:Tween;		private var shopkeeperTween3:Tween;		private var shopkeeperTween4:Tween;		private var shopkeeper_bubble:MovieClip;		private var correct:MovieClip;		private var wrong:MovieClip;		private var dialogue_shopkeeper:Sound;		private var dialogue_shopkeeper2:Sound;		private var soundChannel_shopkeeper:SoundChannel;		private var wordSound:Sound;		private var wordSoundChannel:SoundChannel;		private var wordSound_telegu:Sound;		private var wordSoundChannel_telegu:SoundChannel;		private var moveSelector:Boolean;		private var bottomBar:ImageToMovie;		private var buttonTextLeft:TextField;		private var buttonTextRight:TextField;		private var buttonTextLeft_telegu:TextField;		private var buttonTextRight_telegu:TextField;		private var textStyling:TextFormat;		private var textStyling_telegu_5:TextFormat;		private var repeat:MovieClip;		private var nextWord:MovieClip;		public var image:Loader;		public var answers:Array;		public var URLImage:URLRequest;		public var sequence:Array;		public var current_selection:int;		public var answer_selector:MovieClip;		public var answer_selector_1:MovieClip;		public var gameFinished:Boolean;		private var textField_telegu:TextField;		private var textStyling_telegu:TextFormat;		private var tweenArray_5:Array;		private var fileCopyShop_1:MovieClip;		public var levelComplete:Boolean;				private var dialogueTextField_mother_1:TextField;		private var dialogueTextField_raju:TextField;		private var dialogueStyling:TextFormat;		private var microphoneImageLoader:Loader;		private var microphoneText:TextField;		private var speakNow:Sound;		private var speakNow_soundChannel:SoundChannel;		private var compareString:String;		private var congratsVoiceOver:Sound;		private var congratsSoundChannel:SoundChannel;		private var noOfTries:int;		private var time:Date;		private var l2Word:TextField;		private var l2WordTextFormat:TextFormat;		private var blinkTween:Tween;		private var noOfL2Blinks:int;		private var movieClipL2Word:MovieClip;		private var speakingInstruction:TextField;		private var speakingInstructionStyling:TextFormat;		private var gujaratiFontVariable:gujaratiFont;		public function Purchase(shop_new_1_mc:MovieClip) 		{			noOfL2Blinks = 6;			levelComplete = false;			tweenArray_5 = new Array();			microphoneText = new TextField();			compareString = new String();			gujaratiFontVariable = new gujaratiFont();			addChild(microphoneText);			speakNow = new Sound(new URLRequest("Audio/speakNow_telegu.mp3"));			speakNow_soundChannel = new SoundChannel();			congratsVoiceOver = new Sound(new URLRequest("Audio/congrats.mp3"));			congratsSoundChannel = new SoundChannel();						l2Word = new TextField();			l2WordTextFormat = new TextFormat();			setupL2TextField();			setupInstructionTextField();			noOfTries = 0;						fileCopyShop_1 = shop_new_1_mc;			Market.populateSyllabus();			initialiseTheTeleguTextField();			answers = new Array(4);			sequence = new Array(4);			gameFinished = false;			shopkeeper_bubble = new Mother_bubble();			soundChannel_shopkeeper = new SoundChannel();			wordSoundChannel = new SoundChannel();			wordSoundChannel_telegu = new SoundChannel();									startTheShopZoomingAnimation(shop_new_1_mc);									//startRajuAnimation();			this.addEventListener(Event.ADDED_TO_STAGE, enteredFrame);			moveSelector = false;			correct = new Correct();			wrong = new Wrong();			setUpButtons();			setupDialogueTextFields();			setupMicrophoneImage();		}				private function setupL2TextField():void		{			movieClipL2Word = new MovieClip();			movieClipL2Word.addChild(l2Word);			addChild(movieClipL2Word);						movieClipL2Word.x = 150;			movieClipL2Word.y = 90;			//addChild(l2Word);			l2Word.visible = false;			//l2Word.x = 150;			//l2Word.y = 90;			l2Word.autoSize = TextFieldAutoSize.LEFT;			l2WordTextFormat.size = 36;			l2WordTextFormat.bold = true;					}		private function setupInstructionTextField()		{			speakingInstructionStyling = new TextFormat();			speakingInstruction = new TextField();			speakingInstruction.text = "આ શબ્દ શરૂ થાય છે";			speakingInstruction.autoSize = TextFieldAutoSize.CENTER;			speakingInstruction.x = 150;			speakingInstruction.y = 50;						speakingInstructionStyling.bold = true;			speakingInstructionStyling.size = 28;						speakingInstruction.setTextFormat(speakingInstructionStyling);						addChild(speakingInstruction);			speakingInstruction.visible = false;			trace(speakingInstructionStyling.font);		}		private function putTextInL2(myString:String):void		{			var tempString:String;			var stringLengthCounter:int;			tempString = myString.toUpperCase();			l2Word.text = tempString.charAt(0);						for(stringLengthCounter=0; stringLengthCounter<tempString.length -1 ; stringLengthCounter = stringLengthCounter + 1)			{				l2Word.appendText(" _");			}			l2Word.visible = true;			l2Word.setTextFormat(l2WordTextFormat);		}		private function setupMicrophoneImage():void		{			microphoneImageLoader = new Loader();			microphoneImageLoader.load(new URLRequest("Images/rajuMike.png"));			addChild(microphoneImageLoader);			microphoneImageLoader.visible = false;								}		private function setupDialogueTextFields():void		{			dialogueStyling = new TextFormat();			dialogueTextField_mother_1 = new TextField();			dialogueTextField_raju = new TextField();			shopkeeper_bubble.addChild(dialogueTextField_mother_1);			Market.son_bubble.addChild(dialogueTextField_raju);			dialogueTextField_mother_1.visible = true;			dialogueTextField_mother_1.wordWrap = true;			dialogueTextField_raju.wordWrap = true;									dialogueTextField_mother_1.autoSize = TextFieldAutoSize.LEFT;			dialogueTextField_raju.autoSize = TextFieldAutoSize.LEFT;			dialogueTextField_mother_1.width = 200;			dialogueTextField_raju.width = 200;						dialogueTextField_mother_1.x = -10;			dialogueTextField_mother_1.y = -10;						dialogueTextField_raju.y = -30;			dialogueStyling.font = gujaratiFontVariable.fontName;			dialogueStyling.size = 26;			dialogueStyling.bold = true;						dialogueTextField_mother_1.setTextFormat(dialogueStyling);			dialogueTextField_raju.setTextFormat(dialogueStyling);					}				private function initialiseTheTeleguTextField():void		{			textField_telegu = new TextField();			// to be uncommented if the telegu text needs to be displayed			//addChild(textField_telegu);			textField_telegu.visible = false;						textStyling_telegu = new TextFormat();			textStyling_telegu.bold = true;			textStyling_telegu.size = 32;			textStyling_telegu.color = 0x000000;			textStyling_telegu.font = gujaratiFontVariable.fontName;						textField_telegu.x = 150;			textField_telegu.y = 10;			textField_telegu.autoSize = TextFieldAutoSize.LEFT;												textField_telegu.setTextFormat(textStyling_telegu);		}		private function setupRajuAnimation():void 		{						myMovingBoy = new MovingBoy();			myMovingBoy.scaleY = 0.3;			myMovingBoy.y = fileCopyShop_1.y + fileCopyShop_1.height - myMovingBoy.height;			myMovingBoy.scaleX = .4						myMovingBoy_left = new MovingBoyLeft();						myMovingBoy_left.scaleY = 0.3;						myMovingBoy_left.x = 470;			myMovingBoy_left.y = fileCopyShop_1.y + fileCopyShop_1.height - myMovingBoy.height;			myMovingBoy_left.scaleX = .4									addChild(myMovingBoy);						rajuTween = new Tween(myMovingBoy,"x", None.easeIn,470,470,0.1,true);			myMovingBoy.gotoAndStop("stop");			rajuTween.stop();		}		private function startTheShopZoomingAnimation(copyOfShop_mc:MovieClip):void		{						tweenArray_5.push(new Tween(copyOfShop_mc,"x",None.easeIn,copyOfShop_mc.x,546.5,4,true));			tweenArray_5.push(new Tween(copyOfShop_mc,"y",None.easeIn,copyOfShop_mc.y,197.3,4,true));			tweenArray_5.push(new Tween(copyOfShop_mc,"width",None.easeIn,copyOfShop_mc.width,245.3,4,true));			tweenArray_5.push(new Tween(copyOfShop_mc,"height",None.easeIn,copyOfShop_mc.height,231.7,4,true));			tweenArray_5[tweenArray_5.length-1].addEventListener(TweenEvent.MOTION_FINISH,startRajuAnimation);		}		private function startRajuAnimation(e:TweenEvent):void		{						tweenArray_5[tweenArray_5.length-1].removeEventListener(TweenEvent.MOTION_FINISH,startRajuAnimation);						setupRajuAnimation();			setupShopkeeper();						myMovingBoy.visible = true;			rajuTween.start();			rajuTween.addEventListener(TweenEvent.MOTION_FINISH, startTheDialogues);					}		private function setupShopkeeper():void		{			dialogue_shopkeeper = new Sound(new URLRequest("Audio/dialogue6.mp3"));			dialogue_shopkeeper2 = new Sound(new URLRequest("Audio/dialogue7.mp3"));						shopkeeperTween = new Tween(shopkeeper_bubble,"alpha",Regular.easeIn,0,1,0.5,true);						shopkeeperTween.stop();						shopkeeperTween2 = new Tween(shopkeeper_bubble,"alpha",Regular.easeIn,0,1,0.5,true);			shopkeeperTween2.stop();						shopkeeperTween3 = new Tween(shopkeeper_bubble,"alpha",Regular.easeIn,1,0,0.5,true);			shopkeeperTween3.stop();						shopkeeperTween4 = new Tween(shopkeeper_bubble,"alpha",Regular.easeIn,1,0,0.5,true);			shopkeeperTween4.stop();						addChild(shopkeeper_bubble);			shopkeeper_bubble.visible = false;						answer_selector = new AnswerSelection();			addChild(answer_selector);			answer_selector.visible = false;						answer_selector_1 = new AnswerSelection();			addChild(answer_selector_1);			answer_selector_1.visible = false;						answer_selector_1.x = 150;			answer_selector_1.y = 150;					}						private function startTheDialogues(e:Event):void 		{			rajuTween.removeEventListener(TweenEvent.MOTION_FINISH, startTheDialogues);			myMovingBoy.gotoAndStop("stop");						shopkeeper_bubble.visible = true;			shopkeeper_bubble.x = 530;			shopkeeper_bubble.y = 110;						shopkeeper_bubble.mother_speech.text = "";			dialogueTextField_mother_1.text = "તમનૅ શુ જૉઇએ છે રાજુ";						dialogueTextField_mother_1.setTextFormat(dialogueStyling);			shopkeeperTween.start();			shopkeeperTween.addEventListener(TweenEvent.MOTION_FINISH,shopkeeperDialogue1Finished);					}		private function shopkeeperDialogue1Finished(e:Event):void		{			shopkeeperTween.removeEventListener(TweenEvent.MOTION_FINISH,shopkeeperDialogue1Finished);			soundChannel_shopkeeper = dialogue_shopkeeper.play();						soundChannel_shopkeeper.addEventListener(Event.SOUND_COMPLETE, startTheGuessGame);					}				private function startTheGuessGame(e:Event):void 		{			soundChannel_shopkeeper.removeEventListener(Event.SOUND_COMPLETE, startTheGuessGame);			shopkeeperTween3.start();			shopkeeperTween3.addEventListener(TweenEvent.MOTION_FINISH, shopkeeperDialogue1Finished_fadeOut);					}		private function shopkeeperDialogue1Finished_fadeOut(e:Event):void		{			shopkeeperTween3.removeEventListener(TweenEvent.MOTION_FINISH, shopkeeperDialogue1Finished_fadeOut);									microphoneImageLoader.x = 90;			microphoneImageLoader.y = 350;						dialogueTextField_mother_1.text = "";			shopkeeper_bubble.mother_speech.visible = false;						loadImagesAndSound(Market.questionNumber);			answer_selector.visible = false;						answer_selector_1.visible = true;			current_selection = 0;			moveAnswerSelector();			arrangeImagesRandomly();			textField_telegu.visible = true;			//playSound(null);			speakingInstruction.visible = true;			startWordBlinking(null);		}				public function loadImagesAndSound(myIndex:int):void 		{						wordSound = new Sound();			wordSound_telegu = new Sound();			textField_telegu.text = Market.syllabus[myIndex-1].transliteration;			textField_telegu.setTextFormat(textStyling_telegu);						wordSound.load(new URLRequest("Audio/" + Market.syllabus[myIndex-1].audio));			wordSound_telegu.load(new URLRequest("Audio/" + Market.syllabus[myIndex-1].name + "_telegu.mp3"));			loadImage("Images/" + Market.syllabus[myIndex-1].image, 1);			putTextInL2(Market.syllabus[myIndex-1].name);			addChild(correct);			addChild(wrong);			myMovingBoy.visible = false;			correct.visible = false;			wrong.visible = false;		}				private function hidePreviousImages():void		{			var my_i:int;			for (my_i = 1;my_i<=1;my_i = my_i + 1)			{				removeChild(answers[my_i].movie)			}			removeChild(correct);			removeChild(wrong);			answer_selector.visible = false;			answer_selector_1.visible = false;			textField_telegu.visible = false;			microphoneImageLoader.visible = false;			l2Word.visible = false;						bar_invisible();		}		public function loadImage(filename:String, i:Number):void 		{			URLImage = new URLRequest(filename);			image = new Loader();			image.load(URLImage);			answers[i] = new Object();			answers[i].imageName = filename.substring(7);						answers[i].movie = new MovieClip();			addChild(answers[i].movie);			answers[i].movie.addChild(image);											}				public function playSound(event:Event):void 		{						if (wrong.visible == true)			{								shopkeeperTween4.start();				shopkeeperTween4.addEventListener(TweenEvent.MOTION_FINISH, shopkeeperDialogue2Finished_fadeOut);			}			else			{								bar_invisible();				microphoneImageLoader.visible = false;				speakNow_soundChannel = speakNow.play();				speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE,soundIsComplete);				//speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE, startWordBlinking);			}		}		private function playTheTeleguSoundNow(e:Event):void		{			wordSoundChannel_telegu = wordSound_telegu.play();			wordSoundChannel_telegu.addEventListener(Event.SOUND_COMPLETE, soundIsComplete);		}		private function shopkeeperDialogue2Finished_fadeOut(e:Event):void		{			shopkeeperTween4.removeEventListener(TweenEvent.MOTION_FINISH, shopkeeperDialogue2Finished_fadeOut);			shopkeeper_bubble.mother_speech.visible = false;			dialogueTextField_mother_1.text = "";			correct.visible = false;			wrong.visible = false;			arrangeImagesRandomly();						myMovingBoy.visible = false;			current_selection = 0;						if (noOfTries >=3)			{				noOfTries = 0;				wordSoundChannel = wordSound.play();				wordSoundChannel.addEventListener(Event.SOUND_COMPLETE,wordReiterated_1);				return;			}						else			{				moveAnswerSelector();							speakNow_soundChannel = speakNow.play();				speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE, soundIsComplete);				//speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE, startWordBlinking);			}		}				private function wordReiterated_1(e:Event):void		{			moveAnswerSelector();						speakNow_soundChannel = speakNow.play();			speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE, soundIsComplete);							}				public function startWordBlinking(e:Event)		{			blinkL2Word(null);		}		public function blinkL2Word(e:TweenEvent)		{			if (blinkTween != null)				blinkTween.removeEventListener(TweenEvent.MOTION_FINISH,blinkL2Word);						noOfL2Blinks = noOfL2Blinks - 1;			if (noOfL2Blinks >=0)			{				trace("coming in blinkTween function");				blinkTween = new Tween(movieClipL2Word,"alpha",Regular.easeIn,1,0,0.5,true);				blinkTween.start();				//l2Word.alpha = 0;				l2Word.visible = false;				blinkTween.addEventListener(TweenEvent.MOTION_FINISH,makeBlinkReappear);			}			else				//soundIsComplete(null);				playSound(null);		}		public function makeBlinkReappear(e:TweenEvent)		{			blinkTween.removeEventListener(TweenEvent.MOTION_FINISH,makeBlinkReappear);			blinkTween = new Tween(movieClipL2Word,"alpha",Regular.easeIn,0,1,0.5,true);			blinkTween.start();			//blinkTween.alpha = 1;			l2Word.visible = true;			blinkTween.addEventListener(TweenEvent.MOTION_FINISH,blinkL2Word);		}		public function soundIsComplete(e:Event):void 		{			bar_visible_repeatWord();			moveSelector = true;			microphoneImageLoader.visible = true;						// the recognizer code is added here.			//Market.sock=new SockConnection("localhost",5000);			//Market.sock.sendData("start\n");						Market.sock.addEventListener(SockConnection.DATA_CHANGED, checkAnswer);		}				public function arrangeImagesRandomly():void 		{						answers[1].movie.x = 150;			answers[1].movie.y = 150;					}				public function enteredFrame(e:Event):void 		{			stage.addEventListener(KeyboardEvent.KEY_DOWN,moveSelection);			removeEventListener(Event.ADDED_TO_STAGE, enteredFrame);		}				public function moveSelection(e:KeyboardEvent):void 		{			if(repeat.visible == true)			{				if (e.keyCode == 81)// keycode for q				{					moveSelector = false;					playSound(null);				}			}						if (nextWord.visible == true)			{				if (e.keyCode == 80) // keycode for p				{										hidePreviousImages();					zoomOutTheShop();									}			}			if(moveSelector == true)			{				if (e.keyCode == Keyboard.RIGHT && current_selection%2==0) {					current_selection++;				} else if (e.keyCode == Keyboard.LEFT && current_selection%2==1) {					current_selection--;				} else if (e.keyCode == Keyboard.UP && current_selection>1) {					current_selection=current_selection-2;				} else if (e.keyCode == Keyboard.DOWN && current_selection<2) {					current_selection=current_selection+2;				}								moveAnswerSelector();			}		}				public function checkAnswer(event:Event):void 		{			moveSelector = false;			bar_invisible();			Market.sock.removeEventListener(SockConnection.DATA_CHANGED, checkAnswer);						compareString = Market.sock._data[0];			compareString = compareString.toLowerCase();			compareString = compareString + ".png";						time = new Date();			echoLog(time.getDate()+ "/" + time.getMonth()+ "/" + time.getFullYear()+ ", "+time.getHours()+"/"+time.getMinutes()+"/"+time.getSeconds()+"/"+time.getMilliseconds()+ ", Recall, " +answers[1].imageName + ", " + compareString + ", ");						//Market.sock.sendData("pause\n");			if(compareString.search(answers[1].imageName) != -1)			{				congratulations();			}			else			{				tryAgain();			}		}		public function echoLog(str:String)		{			Market.sock.sendData("echo \'"+str+"\' >> log.txt");		}		private function congratulations(): void 		{			moveSelector = false;			correct.visible = true;			microphoneImageLoader.visible = false;			correct.x = answers[1].movie.x + 37.5;			correct.y = answers[1].movie.y + 37.5;			congratsSoundChannel = congratsVoiceOver.play();			congratsSoundChannel.addEventListener(Event.SOUND_COMPLETE, congratsVoiceoverFinished);						SyllabusQueue.updateWordWeight(Market.syllabus[Market.questionNumber-1].name, 1);					}				private function congratsVoiceoverFinished(e:Event):void		{			bar_visible_nextWord();		}		public function loadTheNextQuestion():void		{						levelComplete = false;			noOfTries = 0;			if(Market.questionNumber>5) {								Market.questionNumber = 1;				hidePreviousImages();				zoomOutTheShop();				gotoNextRound();				return;							}						startTheShopZoomingAnimation(fileCopyShop_1);		}		private function zoomOutTheShop():void		{			tweenArray_5.push(new Tween(fileCopyShop_1,"x",None.easeIn,fileCopyShop_1.x,687.8,4,true));			tweenArray_5.push(new Tween(fileCopyShop_1,"y",None.easeIn,fileCopyShop_1.y,155.9,4,true));			tweenArray_5.push(new Tween(fileCopyShop_1,"width",None.easeIn,fileCopyShop_1.width,84,4,true));			tweenArray_5.push(new Tween(fileCopyShop_1,"height",None.easeIn,fileCopyShop_1.height,84,4,true));			tweenArray_5[tweenArray_5.length-1].addEventListener(TweenEvent.MOTION_FINISH,moveRajuOutOfScreen);		}		private function moveRajuOutOfScreen(e:TweenEvent):void		{			tweenArray_5[length-1].removeEventListener(TweenEvent.MOTION_FINISH,moveRajuOutOfScreen);			removeChild(myMovingBoy);			addChild(myMovingBoy_left);						// needs to commented for normal game play mode			myMovingBoy_left.visible = false;						// the second last parameter needs to be changed to 4 for normal game play mode			rajuTween = new Tween(myMovingBoy_left,"x",None.easeOut,myMovingBoy_left.x,-30,0.1,true);			rajuTween.addEventListener(TweenEvent.MOTION_FINISH,rajuHasMovedOutOfScreen);		}		private function rajuHasMovedOutOfScreen(e:TweenEvent):void		{			rajuTween.removeEventListener(TweenEvent.MOTION_FINISH,rajuHasMovedOutOfScreen);			this.removeChild(myMovingBoy_left);						Market.questionNumber = Market.questionNumber + 1;			if(Market.questionNumber>5) {								Market.questionNumber = 1;				//Market.sock.sendData("stop\n");				gotoNextRound();				return;							}			levelComplete = true;			return;		}				private function tryAgain(): void 		{			noOfTries = noOfTries + 1;			wrong.visible = true;			wrong.x = answers[1].movie.x + 37.5;			wrong.y = answers[1].movie.y + 37.5;			microphoneImageLoader.visible = false;			myMovingBoy.visible = true;			if (noOfTries >2)			{				bar_visible_nextWord();			}			else			{				shopkeeperDialogue("Audio/dialogue7.mp3","ફરી થી કરજૉ");				dialogueTextField_mother_1.text = "ફરી થી કરજૉ";				dialogueTextField_mother_1.setTextFormat(dialogueStyling);			}		}				private function shopkeeperDialogue(audio:String, text:String):void 		{			shopkeeper_bubble.visible = true;			shopkeeperTween2.start();			shopkeeper_bubble.mother_speech.visible = true;			shopkeeperTween2.addEventListener(TweenEvent.MOTION_FINISH,shopkeeperDialogue2Finished);			shopkeeper_bubble.x = 570;			shopkeeper_bubble.y = 150;			shopkeeper_bubble.mother_speech.text = "";		}		private function shopkeeperDialogue2Finished(e:Event):void		{			shopkeeperTween2.removeEventListener(TweenEvent.MOTION_FINISH,shopkeeperDialogue2Finished);			soundChannel_shopkeeper = dialogue_shopkeeper2.play();			soundChannel_shopkeeper.addEventListener(Event.SOUND_COMPLETE, playSound);		}				private function gotoNextRound():void 		{			SyllabusQueue.updateSyllabusQueue();						//Now transfer control back to the narrative screen			gameFinished = true;					}				public function moveAnswerSelector():void 		{			if(current_selection%2==0)				answer_selector.x = 50;			else				answer_selector.x = 250;								if(current_selection<2)				answer_selector.y = 50;			else				answer_selector.y = 250;		}				public function setUpButtons()		{			repeat = new MovieClip();			nextWord = new MovieClip();			bottomBar = new ImageToMovie("Images/horizontalBar.jpg");			bottomBar.setX(0);			bottomBar.setY(453);			bottomBar.scaleX = 1.61;						buttonTextLeft = new TextField();			buttonTextRight = new TextField();			buttonTextLeft_telegu = new TextField();			buttonTextRight_telegu = new TextField();			buttonTextLeft_telegu.text = "ફરી થી";			buttonTextRight_telegu.text = "આગલો";			buttonTextLeft_telegu.y = 4;			buttonTextRight_telegu.y = 4;			softKeys("Repeat", "Next");			buttonTextRight.autoSize = TextFieldAutoSize.LEFT;			buttonTextLeft.autoSize = TextFieldAutoSize.LEFT;			textStyling = new TextFormat();			textStyling.size = 24;			textStyling.color = 0xFFFFFF;						textStyling_telegu_5 = new TextFormat();			textStyling_telegu_5.size = 24;			textStyling_telegu_5.color = 0xFFFFFF;			textStyling_telegu_5.font = gujaratiFontVariable.fontName;						buttonTextLeft.setTextFormat(textStyling);			buttonTextRight.setTextFormat(textStyling);			buttonTextRight_telegu.setTextFormat(textStyling_telegu_5);			buttonTextLeft_telegu.setTextFormat(textStyling_telegu_5);						buttonTextLeft_telegu.x = buttonTextLeft.width + 10;			buttonTextRight_telegu.x = buttonTextRight.width + 10;						bar_invisible();			addChild(bottomBar);			addChild(repeat);			addChild(nextWord);						repeat.addChild(buttonTextLeft);			repeat.addChild(buttonTextLeft_telegu);			repeat.x = 20;			repeat.y = 450;			nextWord.addChild(buttonTextRight);			nextWord.addChild(buttonTextRight_telegu);			nextWord.x = 600;			nextWord.y = 450;		}				public function softKeys(textLeftKey:String, textRightKey:String) 		{			buttonTextLeft.text = textLeftKey;			buttonTextRight.text = textRightKey;		}				public function bar_invisible():void 		{			bottomBar.hideImage();			repeat.visible = false;			nextWord.visible = false;		}				public function bar_visible_nextWord():void 		{			bottomBar.showImage();			repeat.visible = false;			nextWord.visible = true;		}		public function bar_visible_repeatWord():void		{			bottomBar.showImage();			repeat.visible = true;			nextWord.visible = false;		}	}}